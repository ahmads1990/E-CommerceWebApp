@model E_CommerceWebApp.ViewModel.PagedViewModel< IEnumerable<E_CommerceWebApp.Models.Product>>
@{
    int pageSize = Model.PageSize;
    string paginationAction = "DisplayProducts";
}

<!-- Section -->
<section class="py-5">
    <div class="container px-4 px-lg-5 ">
        <header class="mb-4">
            <h3>New products</h3>
        </header>
        <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
            @if (Model.Data.Count() == 0)
            {
                <div>Sorry there are no entries</div>
            }
            else
            {
                @foreach (var product in Model.Data)
                {
                    <!-- Render the partial view for each product -->
                    @await Html.PartialAsync("_ProductPartial", product)
                    ;
                }
            }
        </div>
    </div>
</section>

<div class="row">
    <div class="row">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" asp-action="@paginationAction" asp-route-pageNumber="1" asp-route-pageSize="@pageSize" asp-route-searchQuery="@Model.SearchQuery" aria-label="First">
                        <span aria-hidden="true">&laquo;&laquo;</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="@paginationAction" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@pageSize" asp-route-searchQuery="@Model.SearchQuery" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                <li class="page-item"><a class="page-link">@Model.PageNumber</a></li>

                <li class="page-item">
                    <a class="page-link" asp-action="@paginationAction" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@pageSize" asp-route-searchQuery="@Model.SearchQuery" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="@paginationAction" asp-route-pageNumber="@Model.LastPage" asp-route-pageSize="@pageSize" asp-route-searchQuery="@Model.SearchQuery" aria-label="Last">
                        <span aria-hidden="true">&raquo;&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <div class="row">
        <div class="dropdown">
            <a class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                View Count
            </a>

            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-action="@paginationAction" asp-route-pageNumber="@Model.PageNumber" asp-route-searchQuery="@Model.SearchQuery" asp-route-pageSize="10">10</a></li>
                <li><a class="dropdown-item" asp-action="@paginationAction" asp-route-pageNumber="@Model.PageNumber" asp-route-searchQuery="@Model.SearchQuery" asp-route-pageSize="20">20</a></li>
                <li><a class="dropdown-item" asp-action="@paginationAction" asp-route-pageNumber="@Model.PageNumber" asp-route-searchQuery="@Model.SearchQuery" asp-route-pageSize="50">50</a></li>
            </ul>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        // This script works when user click the add button on the product card to use ajax to send backend request
        console.log("Script loaded!");
        $(document).ready(function () {
            $(".buttonAddToCart").click(function (event) {
                console.log("Button clicked");
                var buttonAction = $(this).attr("formaction"); // Get the form action dynamically

                // Prevent default button behavior from changing the view
                event.preventDefault();
                // create ajax call
                $.ajax({
                    url: buttonAction,
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    success: function (response) {
                        // Handle the success response
                        console.log(response);
                    },
                    error: function (error) {
                        // Handle the error response
                        console.error(error);
                    }
                });
            });
        });
    </script>
}